<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking on fw1993</title>
    <link>https://francis5566.github.io/fw1993/categories/networking/</link>
    <description>Recent content in Networking on fw1993</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Jun 2018 22:11:56 +0800</lastBuildDate>
    
	<atom:link href="https://francis5566.github.io/fw1993/categories/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OSI 7 Layer</title>
      <link>https://francis5566.github.io/fw1993/post/osi-sevenlayer/</link>
      <pubDate>Sat, 09 Jun 2018 22:11:56 +0800</pubDate>
      
      <guid>https://francis5566.github.io/fw1993/post/osi-sevenlayer/</guid>
      <description> Application Layer (Layer 7)  Protocol, include HTTP, HTTPS, DNS etc.  Presentation Layer (Layer 6)    Session Layer (Layer 5)  Session  Transport Layer (Layer 4)  TCP, UDP, SCTP, TLS  Network Layer (Layer 3)  IP Address ICMP , IGMP , ARP, RARP, IPX, OSPF Router, Layer 3 Switch  Data Link Layer (Layer 2)  Ethernet, 802.11(Wi-Fi), MAC Address ARP, RARP Layer 2 Switch  Physical Layer (Layer 1)  Hub, Wire, Fiber, Radio  </description>
    </item>
    
    <item>
      <title>Swift 4 HTTP Request GET and POST</title>
      <link>https://francis5566.github.io/fw1993/post/swift-4-http-request-get-and-post/</link>
      <pubDate>Thu, 24 May 2018 20:35:56 +0800</pubDate>
      
      <guid>https://francis5566.github.io/fw1993/post/swift-4-http-request-get-and-post/</guid>
      <description>Some Summury Using  URL
 URLRequest
 URLSession
 URLSession.datatask(with : URLRequest) which take URLRequest and CompletionHandler as input
  Building your HTTP request step by step really make one know what he is doing.
Note  content of is not suggested. It is breif but may have you do not know what you are doing. Using URLSession.datatask will make GET and POST more similar.
 URLSession.datatask(with : URL).</description>
    </item>
    
    <item>
      <title>TCP/IP protocols</title>
      <link>https://francis5566.github.io/fw1993/post/tcp-ip-protocols/</link>
      <pubDate>Fri, 11 May 2018 11:29:21 +0800</pubDate>
      
      <guid>https://francis5566.github.io/fw1993/post/tcp-ip-protocols/</guid>
      <description>HTTP  Hyper Text Transport Protocol TCP Port 80  HTTPS  Hyper Text Transport Protocol Secure TCP Port 443  FTP  File Transfer Protocol TCP Port 21  Telnet  Telecommunication Protocol TCP Port 23  SMTP  Simple Mail Transfer Protocol TCP port 25 For email  DNS  Domain Name System UDP Port 53 Wireshark Filter  dns udp.port == 53  Some Famous public DNS Server</description>
    </item>
    
  </channel>
</rss>