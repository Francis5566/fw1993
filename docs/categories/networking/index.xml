<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking on fw1993</title>
    <link>https://francis5566.github.io/fw1993/categories/networking/</link>
    <description>Recent content in Networking on fw1993</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 May 2018 20:35:56 +0800</lastBuildDate>
    
	<atom:link href="https://francis5566.github.io/fw1993/categories/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift 4 HTTP Request GET and POST</title>
      <link>https://francis5566.github.io/fw1993/post/swift-4-http-request-get-and-post/</link>
      <pubDate>Thu, 24 May 2018 20:35:56 +0800</pubDate>
      
      <guid>https://francis5566.github.io/fw1993/post/swift-4-http-request-get-and-post/</guid>
      <description>Some Summury Using the portfolio
 URL
 URLRequest
 URLSession
 URLSession.datatask(URLSessionDataTask) which take URLRequest and CompletionHandler as input
  Building your HTTP request step by step really make one know what he is doing.
Also DO NOT USE (before you are ready)
 content of while using GET. Using datatask will make GET and POST more similar.
 URLSession.datatask(URLSessionDataTask) which take URL only as input. Should build your session step by step.</description>
    </item>
    
    <item>
      <title>TCP/IP protocols</title>
      <link>https://francis5566.github.io/fw1993/post/tcp-ip-protocols/</link>
      <pubDate>Fri, 11 May 2018 11:29:21 +0800</pubDate>
      
      <guid>https://francis5566.github.io/fw1993/post/tcp-ip-protocols/</guid>
      <description> Radius  Protocol : UDP
 Default Port : 1812 (authentication) &amp;amp; 1813(accounting)
 Wireshark Filter:
 radius
 udp.port == 1812
 udp.port == 1813
  Code  Access-Request
 Access-Accept
 Access-Reject
 Access-Challenge
   DNS  Protocol : Usually UDP Default Port : 53 Wireshark Filter  dns udp.port == 53  Some Famous public DNS Server
https://www.lifewire.com/free-and-public-dns-servers-2626062  </description>
    </item>
    
  </channel>
</rss>