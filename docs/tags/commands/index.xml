<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>commands | goatwu1993</title>
    <link>https://goatwu1993.github.io/blog/tags/commands/</link>
      <atom:link href="https://goatwu1993.github.io/blog/tags/commands/index.xml" rel="self" type="application/rss+xml" />
    <description>commands</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 15 Jan 2020 20:36:03 +0800</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>commands</title>
      <link>https://goatwu1993.github.io/blog/tags/commands/</link>
    </image>
    
    <item>
      <title>Docker commands</title>
      <link>https://goatwu1993.github.io/blog/posts/docker/docker-commands/</link>
      <pubDate>Wed, 15 Jan 2020 20:36:03 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/docker/docker-commands/</guid>
      <description>&lt;h2 id=&#34;container&#34;&gt;container&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;docker-compose&#34;&gt;docker-compose&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose ps
docker-compose ps -a

docker-compose down
docker-compose scale kafka=3
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Git commands</title>
      <link>https://goatwu1993.github.io/blog/posts/basics/git-commands/</link>
      <pubDate>Fri, 27 Dec 2019 21:32:52 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/basics/git-commands/</guid>
      <description>&lt;h2 id=&#34;新增-submodule&#34;&gt;新增 submodule&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add git@github.com:xxx dir_name
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;移除-submodule&#34;&gt;移除 submodule&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git rm --cached [欲移除的目錄]
rm -rf [欲移除的目錄]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;修改-gitmodules&#34;&gt;修改 .gitmodules&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim .gitmodules
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;修改-gitconfig&#34;&gt;修改 .git/config&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim .git/config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最後再 commit，改變整個 Repository。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .gitmodules
git commit -m &amp;quot;Remove a submodule&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安全起見再做個-sync&#34;&gt;安全起見再做個 sync&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule sync
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;參考資料&#34;&gt;參考資料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://biang.io/blog/development/tools/revision-control/git/submod&#34;&gt;https://biang.io/blog/development/tools/revision-control/git/submod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo commands</title>
      <link>https://goatwu1993.github.io/blog/posts/hugo/hugo-commands/</link>
      <pubDate>Fri, 27 Dec 2019 21:32:52 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/hugo/hugo-commands/</guid>
      <description>&lt;h2 id=&#34;hugo-使用&#34;&gt;Hugo 使用&lt;/h2&gt;
&lt;h3 id=&#34;安裝&#34;&gt;安裝&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;第一次使用&#34;&gt;第一次使用&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site quickstart
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;測試&#34;&gt;測試&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
cd quickstart
hugo
hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;部署&#34;&gt;部署&lt;/h3&gt;
&lt;p&gt;注意 content 寫完輸入 hugo 並不會自動刪除目標資料夾，手動刪除再跑一次 hugo 。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf ./docs
hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;新增文章&#34;&gt;新增文章&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new posts/my-first-post.md
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;參考資料&#34;&gt;參考資料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo 官網&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bash commands</title>
      <link>https://goatwu1993.github.io/blog/posts/basics/bash-cheatsheet/</link>
      <pubDate>Sun, 10 Jun 2018 17:20:14 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/basics/bash-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;greatest-command-of-all-time&#34;&gt;Greatest command of all time&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# manual
man anything
info anything
anything --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;general-commands&#34;&gt;General commands&lt;/h2&gt;
&lt;h3 id=&#34;getting-information&#34;&gt;Getting information&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show shell name.
echo $SHELL
echo $0
# Show shell version.
$SHELL --version

# Clear terminal.
clear

# Show command history.
history

# Print working directory
pwd

# Show system info
uname -a

# uptime
uptime
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;file-managing&#34;&gt;File managing&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# List the files in working directory.
ls
# List all files, hidden file included, with detailed information.
ls -la

# Change ownership of a file.
chown
# Change an ownership of a file.
chown nobody.nogroup your_file_name
# Recursively change all file under this directory.
chown -R nobody.nogroup .

# Change the read/write permission of a file
chmod
# Make file r/w/e able for all user &amp;amp; group.
chmod 777 file_name
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;network&#34;&gt;Network&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show network interface config/info.
ifconfig

# get public ip
curl icanhazip.com

# Show network status
netstat
# Show all, include tcp/udp port.
netstat -an
# Show established connection
netstat -antu | grep &#39;ESTABLISHED&#39;
# Show kernel routing information
netstat -r
netstat -tulnp

# Check the bridge Interface
brtcl
brctl addbr &amp;lt;name&amp;gt;

# ssh
ssh
# Generate a new ssh-key. Usually used when attempt to ssh a address which has change device/remote host. Use this when encounter error message: WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!
ssh-keygen

# scp
scp
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cpu-memery-task--process&#34;&gt;CPU, memery, task &amp;amp; process&lt;/h2&gt;
&lt;h3 id=&#34;check-and-monitor-process&#34;&gt;Check and monitor process&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# List all process run by user shell
ps
# List all process, even by status
ps aux
# pstree
pstree

# Monitor the process status
top
# cpu
top -o cpu
# memery
top -o rsize

# List cronjob
crontab
# List all cronjob.
crontab -l
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sending-signal-or-kill-process&#34;&gt;Sending signal or kill process&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Send a signal to a process
kill -signal PID
# Send 15 SIGTERM to a process
kill $pid

# killall allow you to kill app with name instead of pid
killall -9 $processname
# Ask before terminate
killall -i -9 $processname
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;memory-usage&#34;&gt;Memory usage&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show recent memory usage
free -m

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://geekflare.com/netstat/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;geekflare&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://linux.vbird.org/linux_basic/0440processcontrol.php#ps_l&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;鳥哥第十六章、程序管理與 SELinux 初探&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
