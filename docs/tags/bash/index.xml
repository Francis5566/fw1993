<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash | goatwu1993</title>
    <link>https://goatwu1993.github.io/blog/tags/bash/</link>
      <atom:link href="https://goatwu1993.github.io/blog/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <description>Bash</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 20 Jan 2020 19:09:20 +0800</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Bash</title>
      <link>https://goatwu1993.github.io/blog/tags/bash/</link>
    </image>
    
    <item>
      <title>Bash - source &amp; export</title>
      <link>https://goatwu1993.github.io/blog/posts/basics/bash-p5-source-export/</link>
      <pubDate>Mon, 20 Jan 2020 19:09:20 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/basics/bash-p5-source-export/</guid>
      <description>&lt;h2 id=&#34;source&#34;&gt;source&lt;/h2&gt;
&lt;p&gt;使用 source 執行 shell script 會直接沿用目前的進程。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source hello-world.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;excuting&#34;&gt;Excuting&lt;/h2&gt;
&lt;p&gt;直接執行 shell script 會開啟一個子進程&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./hello-world.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;export&#34;&gt;Export&lt;/h2&gt;
&lt;p&gt;將某個變數變成環境變數，Life cycle 為這個進程結束為止&lt;/p&gt;
&lt;h2 id=&#34;diagram&#34;&gt;diagram&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
    subgraph Export Life cycle
        C1(parent process) -.-&amp;gt; |sleep| C2(parent process)
        C1 --&amp;gt; C3(export foo=FOO)
        C3 --&amp;gt; C4(echo $foo &amp;lt;br&amp;gt; FOO)
        C4 --&amp;gt; |export expire|C2
    end
    subgraph Execute
        A1(parent process) -.-&amp;gt; |sleep| A2(parent process)
        A1 --&amp;gt; |fork| A3(test1.sh)
        A3 --&amp;gt; A2
    end
    subgraph Source
        B1(parent process) -.-&amp;gt; B2(test1.sh)
        B2 -.-&amp;gt; B3(child process)
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/176783/what-is-the-difference-between-executing-a-bash-script-vs-sourcing-it&#34;&gt;https://superuser.com/questions/176783/what-is-the-difference-between-executing-a-bash-script-vs-sourcing-it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bash - Configs</title>
      <link>https://goatwu1993.github.io/blog/posts/basics/bash-p3-configs/</link>
      <pubDate>Sun, 19 Jan 2020 22:12:33 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/basics/bash-p3-configs/</guid>
      <description>&lt;h2 id=&#34;login-shell&#34;&gt;Login shell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用 su 切換使用者&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;subshell&#34;&gt;Subshell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;screen&lt;/li&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;etcprofile&#34;&gt;/etc/profile&lt;/h2&gt;
&lt;p&gt;全部的使用者的 login shell 都會讀取，包含 bash, zsh, etc.&lt;/p&gt;
&lt;h2 id=&#34;etcbash_profile&#34;&gt;/etc/bash_profile&lt;/h2&gt;
&lt;p&gt;全部使用者的 bash login shell 會讀取&lt;/p&gt;
&lt;!-- markdownlint-disable MD033 --&gt;
&lt;h2&gt; ~/.profile &lt;/h2&gt;  
&lt;!-- markdownlint-enable MD033 --&gt;
&lt;p&gt;個別使用者的 login shell 會讀取，包含 sh, bash, zsh&lt;/p&gt;
&lt;h2 id=&#34;bash_profile&#34;&gt;~/.bash_profile&lt;/h2&gt;
&lt;p&gt;個別使用者的 bash login shell 會讀取&lt;/p&gt;
&lt;h2 id=&#34;bashrc&#34;&gt;~/.bashrc&lt;/h2&gt;
&lt;p&gt;開啟 subshell 會讀取&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
    subgraph Login Shell
        subgraph System configs
        A(&amp;quot;/etc/profile&amp;quot;) --&amp;gt; B(&amp;quot;/etc/bash_profile&amp;quot;)
        end
        subgraph User configs
        B --&amp;gt; C(&amp;quot;~/.profile&amp;quot;)
        C --&amp;gt; D(&amp;quot;~/.bash_profile&amp;quot;)
        end
    end
    subgraph Subscreen
        D -.-&amp;gt; E(&amp;quot;~/.bashrc&amp;quot;)
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://serverfault.com/questions/261802/what-are-the-functional-differences-between-profile-bash-profile-and-bashrc&#34;&gt;https://serverfault.com/questions/261802/what-are-the-functional-differences-between-profile-bash-profile-and-bashrc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bash commands</title>
      <link>https://goatwu1993.github.io/blog/posts/basics/bash-cheatsheet/</link>
      <pubDate>Sun, 10 Jun 2018 17:20:14 +0800</pubDate>
      <guid>https://goatwu1993.github.io/blog/posts/basics/bash-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;greatest-command-of-all-time&#34;&gt;Greatest command of all time&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# manual
man anything
info anything
anything --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;general-commands&#34;&gt;General commands&lt;/h2&gt;
&lt;h3 id=&#34;getting-information&#34;&gt;Getting information&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show shell name.
echo $SHELL
echo $0
# Show shell version.
$SHELL --version

# Clear terminal.
clear

# Show command history.
history

# Print working directory
pwd

# Show system info
uname -a

# uptime
uptime
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;file-managing&#34;&gt;File managing&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# List the files in working directory.
ls
# List all files, hidden file included, with detailed information.
ls -la


&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;network&#34;&gt;Network&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show network interface config/info.
ifconfig

# get public ip
curl icanhazip.com

# Show network status
netstat
# Show all, include tcp/udp port.
netstat -an
# Show established connection
netstat -antu | grep &#39;ESTABLISHED&#39;
# Show kernel routing information
netstat -r
netstat -tulnp

# Check the bridge Interface
brtcl
brctl addbr &amp;lt;name&amp;gt;

# ssh
ssh
# Generate a new ssh-key. Usually used when attempt to ssh a address which has change device/remote host. Use this when encounter error message: WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!
ssh-keygen

# scp
scp
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cpu-memery-task--process&#34;&gt;CPU, memery, task &amp;amp; process&lt;/h2&gt;
&lt;h3 id=&#34;check-and-monitor-process&#34;&gt;Check and monitor process&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# List all process run by user shell
ps
# List all process, even by status
ps aux
# pstree
pstree

# Monitor the process status
top
# cpu
top -o cpu
# memery
top -o rsize

# List cronjob
crontab
# List all cronjob.
crontab -l
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sending-signal-or-kill-process&#34;&gt;Sending signal or kill process&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Send a signal to a process
kill -signal PID
# Send 15 SIGTERM to a process
kill $pid

# killall allow you to kill app with name instead of pid
killall -9 $processname
# Ask before terminate
killall -i -9 $processname
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;memory-usage&#34;&gt;Memory usage&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Show recent memory usage
free -m

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://geekflare.com/netstat/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;geekflare&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://linux.vbird.org/linux_basic/0440processcontrol.php#ps_l&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;鳥哥第十六章、程序管理與 SELinux 初探&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
